{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexis\\\\Lista de tareas\\\\Test\\\\Test\\\\ClientApp\\\\src\\\\components\\\\TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport TareaFormulario from './TaskForm';\nimport Tarea from './Task';\nimport '../css/TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ListaDeTareas() {\n  _s();\n\n  const [tareas, setTareas] = useState([]);\n\n  const traerTareas = async () => {\n    try {\n      const response = await fetch(\"api/Task/Index\");\n      const data = await response.json();\n      setTareas(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const agregarTarea = tarea => {\n    if (tarea.Texto.trim()) {\n      tarea.Texto = tarea.Texto.trim();\n      let TaskList = new FormData({\n        \"Id\": tarea.Id,\n        \"Texto\": tarea.Texto,\n        \"Completada\": tarea.Completada\n      });\n      fetch('api/Task/Create', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: TaskList\n      }).then(response => response.json());\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  };\n\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  };\n\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  };\n\n  useEffect(() => {\n    traerTareas();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TareaFormulario, {\n      onSubmit: agregarTarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tareas-lista-contenedor\",\n      children: tareas.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n        id: tarea.id,\n        texto: tarea.texto,\n        completada: tarea.completada,\n        completarTarea: completarTarea,\n        eliminarTarea: eliminarTarea\n      }, tarea.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ListaDeTareas, \"JZ37RroqkD5G4jx2AuDQKHVz1nE=\");\n\n_c = ListaDeTareas;\nexport default ListaDeTareas;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListaDeTareas\");","map":{"version":3,"names":["React","useState","useEffect","TareaFormulario","Tarea","ListaDeTareas","tareas","setTareas","traerTareas","response","fetch","data","json","error","console","agregarTarea","tarea","Texto","trim","TaskList","FormData","Id","Completada","method","headers","body","then","tareasActualizadas","eliminarTarea","id","filter","completarTarea","map","completada","texto"],"sources":["C:/Alexis/Lista de tareas/Test/Test/ClientApp/src/components/TaskList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport TareaFormulario from './TaskForm';\r\nimport Tarea from './Task';\r\nimport '../css/TaskList.css';\r\n\r\n\r\nfunction ListaDeTareas() {\r\n\r\n    const [tareas, setTareas] = useState([]);\r\n\r\n    const traerTareas = async() => {\r\n        try {\r\n            const response = await fetch(\"api/Task/Index\");\r\n            const data = await response.json()\r\n            setTareas(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    const agregarTarea = tarea => {\r\n        if (tarea.Texto.trim()) {\r\n            tarea.Texto = tarea.Texto.trim();\r\n            let TaskList = new FormData({ \"Id\": tarea.Id, \"Texto\": tarea.Texto, \"Completada\": tarea.Completada });\r\n            fetch('api/Task/Create', {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: TaskList\r\n\r\n            }).then((response) => response.json())\r\n            const tareasActualizadas = [tarea, ...tareas];\r\n            setTareas(tareasActualizadas);\r\n        }\r\n    }\r\n\r\n    const eliminarTarea = id => {\r\n        const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\r\n        setTareas(tareasActualizadas);\r\n    }\r\n\r\n    const completarTarea = id => {\r\n        const tareasActualizadas = tareas.map(tarea => {\r\n            if (tarea.id === id) {\r\n                tarea.completada = !tarea.completada;\r\n            }\r\n            return tarea;\r\n        });\r\n        setTareas(tareasActualizadas);\r\n    }\r\n    useEffect(() => {\r\n        traerTareas();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <TareaFormulario onSubmit={agregarTarea} />\r\n            <div className='tareas-lista-contenedor'>\r\n                {\r\n                    tareas.map((tarea) =>\r\n                        <Tarea\r\n                            key={tarea.id}\r\n                            id={tarea.id}\r\n                            texto={tarea.texto}\r\n                            completada={tarea.completada}\r\n                            completarTarea={completarTarea}\r\n                            eliminarTarea={eliminarTarea} />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default ListaDeTareas;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAO,qBAAP;;;;AAGA,SAASC,aAAT,GAAyB;EAAA;;EAErB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMO,WAAW,GAAG,YAAW;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAD,CAA5B;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;MACAL,SAAS,CAACI,IAAD,CAAT;IACH,CAJD,CAIE,OAAOE,KAAP,EAAc;MACZC,OAAO,CAACD,KAAR,CAAcA,KAAd;IACH;EACJ,CARD;;EASA,MAAME,YAAY,GAAGC,KAAK,IAAI;IAC1B,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAZ,EAAJ,EAAwB;MACpBF,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYC,IAAZ,EAAd;MACA,IAAIC,QAAQ,GAAG,IAAIC,QAAJ,CAAa;QAAE,MAAMJ,KAAK,CAACK,EAAd;QAAkB,SAASL,KAAK,CAACC,KAAjC;QAAwC,cAAcD,KAAK,CAACM;MAA5D,CAAb,CAAf;MACAZ,KAAK,CAAC,iBAAD,EAAoB;QACrBa,MAAM,EAAE,MADa;QAErBC,OAAO,EAAE;UAAE,gBAAgB;QAAlB,CAFY;QAGrBC,IAAI,EAAEN;MAHe,CAApB,CAAL,CAKGO,IALH,CAKSjB,QAAD,IAAcA,QAAQ,CAACG,IAAT,EALtB;MAMA,MAAMe,kBAAkB,GAAG,CAACX,KAAD,EAAQ,GAAGV,MAAX,CAA3B;MACAC,SAAS,CAACoB,kBAAD,CAAT;IACH;EACJ,CAbD;;EAeA,MAAMC,aAAa,GAAGC,EAAE,IAAI;IACxB,MAAMF,kBAAkB,GAAGrB,MAAM,CAACwB,MAAP,CAAcd,KAAK,IAAIA,KAAK,CAACa,EAAN,KAAaA,EAApC,CAA3B;IACAtB,SAAS,CAACoB,kBAAD,CAAT;EACH,CAHD;;EAKA,MAAMI,cAAc,GAAGF,EAAE,IAAI;IACzB,MAAMF,kBAAkB,GAAGrB,MAAM,CAAC0B,GAAP,CAAWhB,KAAK,IAAI;MAC3C,IAAIA,KAAK,CAACa,EAAN,KAAaA,EAAjB,EAAqB;QACjBb,KAAK,CAACiB,UAAN,GAAmB,CAACjB,KAAK,CAACiB,UAA1B;MACH;;MACD,OAAOjB,KAAP;IACH,CAL0B,CAA3B;IAMAT,SAAS,CAACoB,kBAAD,CAAT;EACH,CARD;;EASAzB,SAAS,CAAC,MAAM;IACZM,WAAW;EACd,CAFQ,EAEN,EAFM,CAAT;EAIA,oBACI;IAAA,wBACI,QAAC,eAAD;MAAiB,QAAQ,EAAEO;IAA3B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,yBAAf;MAAA,UAEQT,MAAM,CAAC0B,GAAP,CAAYhB,KAAD,iBACP,QAAC,KAAD;QAEI,EAAE,EAAEA,KAAK,CAACa,EAFd;QAGI,KAAK,EAAEb,KAAK,CAACkB,KAHjB;QAII,UAAU,EAAElB,KAAK,CAACiB,UAJtB;QAKI,cAAc,EAAEF,cALpB;QAMI,aAAa,EAAEH;MANnB,GACSZ,KAAK,CAACa,EADf;QAAA;QAAA;QAAA;MAAA,QADJ;IAFR;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAkBH;;GAhEQxB,a;;KAAAA,a;AAqET,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}