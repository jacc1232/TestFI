[{"C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\index.js":"1","C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\App.js":"2","C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\components\\TaskList.js":"3","C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\components\\Task.js":"4","C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\components\\TaskForm.js":"5"},{"size":268,"mtime":1660825398515,"results":"6","hashOfConfig":"7"},{"size":339,"mtime":1660868205160,"results":"8","hashOfConfig":"7"},{"size":5202,"mtime":1660909853610,"results":"9","hashOfConfig":"7"},{"size":1897,"mtime":1660868295833,"results":"10","hashOfConfig":"7"},{"size":1449,"mtime":1660868363047,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"16"},"oo7p79",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":1,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"32","usedDeprecatedRules":"16"},"C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\index.js",["33","34"],[],"import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './custom.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n",["35","36","37"],"C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\App.js",["38","39","40","41"],[],"import './custom.css';\r\nimport ListaDeTareas from './components/TaskList';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='aplication-task'>\r\n            <div className='task-list-main'>\r\n                <h1>Mis Tareas</h1>\r\n                <ListaDeTareas />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\components\\TaskList.js",["42","43","44","45","46","47"],[],"﻿import React, { useState, useEffect } from 'react';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport TaskForm from './TaskForm';\r\nimport Task from './Task';\r\nimport '../css/TaskList.css';\r\n\r\n\r\n\r\nfunction TaskList() {\r\n\r\n    const [tasks, setTask] = useState([]);\r\n    const getTasks = async () => {\r\n        try {\r\n            const response = await fetch(\"api/Task/Index\");\r\n            const data = await response.json();\r\n            setTask(data);\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n    const createTask = task => {\r\n        if (task.texto.trim()) {\r\n            task.texto = task.texto.trim();\r\n            var formdata = new FormData();\r\n            formdata.append(\"Texto\", task.texto);\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                body: formdata,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            fetch(\"api/Task/Create\", requestOptions)\r\n                .then(response => response.text())\r\n                .then(result => {\r\n                    getTasks();\r\n                    toast.success(\"Se guardó la tarea correctamente.\");\r\n                })\r\n                .catch(error => console.log('error', error));\r\n\r\n        }\r\n        else {\r\n            toast.info(\"La tarea debe tener algún nombre.\");\r\n        }\r\n    }\r\n\r\n    const deleteTask = id => {\r\n        if (!confirm(\"Está seguro que desea eliminar esta tarea\"))\r\n            return;\r\n        else {\r\n            fetch('api/Task/Delete/' + id, {\r\n                method: 'delete'\r\n            }).then(data => {\r\n                getTasks();\r\n                toast(\"Tarea Eliminada Correctamente.\");\r\n            });\r\n        }\r\n    }\r\n\r\n    const completeTask = id => {\r\n        const taskEdit = tasks.find(tarea => tarea.id == id);\r\n        if (taskEdit.id === id) {\r\n            taskEdit.completada = !taskEdit.completada;\r\n        }\r\n\r\n        var formdata = new FormData();\r\n        formdata.append(\"Texto\", taskEdit.texto);\r\n        formdata.append(\"Completada\", taskEdit.completada);\r\n        formdata.append(\"Id\", taskEdit.id);\r\n        var requestOptions = {\r\n            method: 'Put',\r\n            body: formdata,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"api/Task/Edit\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                const taskUpdate = [...tasks];\r\n                setTask(taskUpdate);\r\n                taskEdit.completada ? toast.success(\"Tarea completada Correctamente.\") : toast.success(\"Se actualizó la tarea correctamente.\");\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n    const taskEdit = id => {\r\n        tasks.filter(task => task.id === id).map(x => {\r\n            x.editar = true;\r\n        })\r\n        const taskUpdate = [...tasks];\r\n        setTask(taskUpdate);\r\n    }\r\n    const confirmEdit = (id, input) => {\r\n        const taskEdit = tasks.find(tarea => tarea.id == id);\r\n\r\n        var formdata = new FormData();\r\n        formdata.append(\"Texto\", input);\r\n        formdata.append(\"Completada\", taskEdit.completada);\r\n        formdata.append(\"Id\", taskEdit.id);\r\n        var requestOptions = {\r\n            method: 'Put',\r\n            body: formdata,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"api/Task/Edit\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => {\r\n                getTasks();\r\n                toast.success(\"Se actualizó la tarea correctamente.\");\r\n            })\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n    const cancelEdit = () => {\r\n        tasks.filter(x => x.editar === true).map(task => task.editar = false);\r\n        const taskUpdate = [...tasks];\r\n        setTask(taskUpdate);\r\n    }\r\n    const searchTask = text => {\r\n        if (text !== \"\") {\r\n            const taskFilter = tasks.filter(x => x.texto.includes(text))\r\n            setTask(taskFilter);\r\n        }\r\n        else {\r\n            getTasks();\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <TaskForm onSubmit={createTask} search={searchTask} />\r\n            <ToastContainer closeButton={false} position=\"bottom-right\" />\r\n            <div className='task-list-container'>\r\n                {\r\n                    tasks.map((task) =>\r\n                        <Task\r\n                            key={task.id}\r\n                            id={task.id}\r\n                            texto={task.texto}\r\n                            editar={task.editar == undefined ? false : task.editar}\r\n                            completada={task.completada}\r\n                            completeTask={completeTask}\r\n                            deleteTask={deleteTask}\r\n                            taskEdit={taskEdit}\r\n                            confirmEdit={confirmEdit}\r\n                            cancelEdit={cancelEdit}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default TaskList;","C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\components\\Task.js",["48"],[],"﻿import React, { useState } from 'react';\r\nimport '../css/Task.css';\r\nimport { AiOutlineCloseCircle, AiFillEdit, AiOutlineCheckCircle, AiOutlineClose } from \"react-icons/ai\";\r\n\r\nfunction Task({ id, texto, completada, editar, completeTask, deleteTask, taskEdit, confirmEdit, cancelEdit }) {\r\n    const [input, setInput] = useState('');\r\n    const changeInput = e => {\r\n        setInput(e.target.value);\r\n    }\r\n    if (editar) {\r\n        return (\r\n            <div className='task-container'>\r\n                <div>\r\n                    <input type=\"text\" className='task-input' name='texto' placeholder={texto} onChange={changeInput}/>\r\n                </div>\r\n                <div className='task-container-icons'\r\n                    onClick={() => confirmEdit(id,input)}>\r\n                    <AiOutlineCheckCircle className='task-icon' />\r\n                </div>\r\n                <div\r\n                    className='task-container-icons'\r\n                    onClick={() => cancelEdit(id)}>\r\n                    <AiOutlineClose className='task-icon' />\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n    else {\r\n        return (\r\n            <div className={completada ? 'task-container complete' : 'task-container'}>\r\n                <div\r\n                    className='task-text'\r\n                    onClick={() => completeTask(id)}>\r\n                    {texto}\r\n                </div>\r\n                <div className='task-container-icons'\r\n                    onClick={() => taskEdit(id)}>\r\n                    <AiFillEdit className='task-icon' />\r\n                </div>\r\n                <div\r\n                    className='task-container-icons'\r\n                    onClick={() => deleteTask(id)}>\r\n                    <AiOutlineCloseCircle className='task-icon' />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Task;","C:\\Alexis\\Lista de tareas\\Test\\Test\\ClientApp\\src\\components\\TaskForm.js",["49"],[],"﻿import React, { useState } from 'react';\r\nimport '../css/TaskForm.css';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { AiOutlineSearch, AiOutlineUnorderedList } from \"react-icons/ai\";\r\nfunction TaskForm(props) {\r\n\r\n    const [input, setInput] = useState('');\r\n\r\n    const manageChange = e => {\r\n        setInput(e.target.value);\r\n    }\r\n\r\n    const manageSend = e => {\r\n        e.preventDefault();\r\n\r\n        const taskNew = {\r\n            id: uuidv4(),\r\n            texto: input,\r\n            completada: false,\r\n            editar:false\r\n        }\r\n\r\n        props.onSubmit(taskNew);\r\n\r\n    }\r\n    const searchTask = e => {\r\n        e.preventDefault();\r\n        props.search(input);\r\n    }\r\n\r\n    return (\r\n        <form\r\n            className='task-form'\r\n            onSubmit={manageSend}>\r\n            <input\r\n                className='task-input'\r\n                type='text'\r\n                placeholder='Escribe o busca una Tarea'\r\n                name='texto'\r\n                onChange={manageChange}\r\n            />\r\n            <button\r\n                className='task-button'\r\n                onClick={searchTask} title='Buscar Tarea'>\r\n                <AiOutlineSearch className='task-icon' />\r\n            </button>\r\n            <button className='task-button' title='Agregar Tarea'>\r\n                <AiOutlineUnorderedList className='task-icon' />\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TaskForm;\r\n",{"ruleId":"50","severity":1,"message":"51","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"54","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":2,"message":"62","line":6,"column":9,"nodeType":"63","messageId":"64","endLine":6,"endColumn":42},{"ruleId":"61","severity":2,"message":"62","line":7,"column":13,"nodeType":"63","messageId":"64","endLine":7,"endColumn":45},{"ruleId":"61","severity":2,"message":"62","line":8,"column":17,"nodeType":"63","messageId":"64","endLine":8,"endColumn":21},{"ruleId":"61","severity":2,"message":"62","line":9,"column":17,"nodeType":"63","messageId":"64","endLine":9,"endColumn":34},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","messageId":"68","fix":"69"},{"ruleId":"70","severity":2,"message":"71","line":49,"column":14,"nodeType":"52","messageId":"72","endLine":49,"endColumn":21},{"ruleId":"73","severity":1,"message":"74","line":62,"column":55,"nodeType":"75","messageId":"68","endLine":62,"endColumn":57},{"ruleId":"76","severity":1,"message":"77","line":88,"column":52,"nodeType":"78","messageId":"79","endLine":88,"endColumn":54},{"ruleId":"73","severity":1,"message":"74","line":95,"column":55,"nodeType":"75","messageId":"68","endLine":95,"endColumn":57},{"ruleId":"73","severity":1,"message":"74","line":147,"column":49,"nodeType":"75","messageId":"68","endLine":147,"endColumn":51},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","messageId":"68","fix":"80"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":1,"nodeType":"67","messageId":"68","fix":"81"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","no-native-reassign",["82"],"no-negated-in-lhs",["83"],"jsx-a11y/accessible-emoji",[],"react/react-in-jsx-scope","'React' must be in scope when using JSX","JSXOpeningElement","notInScope","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"84","text":"85"},"no-restricted-globals","Unexpected use of 'confirm'.","defaultMessage","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"86","text":"85"},{"range":"87","text":"85"},"no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0]]