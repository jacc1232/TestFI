{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexis\\\\Lista de tareas\\\\Test\\\\Test\\\\ClientApp\\\\src\\\\components\\\\TaskList.js\";\nimport React, { useState } from 'react';\nimport TareaFormulario from './TaskForm';\nimport Tarea from './Task';\nimport '../css/TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass ListaDeTareas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      task: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"api/Task/Index\").then(res => res.json()).then(result => {\n      this.setState({\n        task: result\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TareaFormulario, {\n        onSubmit: agregarTarea\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tareas-lista-contenedor\",\n        children: task.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n          id: tarea.id,\n          texto: tarea.description\n        }, tarea.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n} //function ListaDeTareas() {\n//    const [tareas, setTareas] = useState([]);\n//    const agregarTarea = tarea => {\n//        if (tarea.texto.trim()) {\n//            tarea.texto = tarea.texto.trim();\n//            const tareasActualizadas = [tarea, ...tareas];\n//            setTareas(tareasActualizadas);\n//        }\n//    }\n//    const eliminarTarea = id => {\n//        const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n//        setTareas(tareasActualizadas);\n//    }\n//    const completarTarea = id => {\n//        const tareasActualizadas = tareas.map(tarea => {\n//            if (tarea.id === id) {\n//                tarea.completada = !tarea.completada;\n//            }\n//            return tarea;\n//        });\n//        setTareas(tareasActualizadas);\n//    }\n//    return (\n//        <>\n//            <TareaFormulario onSubmit={agregarTarea} />\n//            <div className='tareas-lista-contenedor'>\n//                {\n//                    tareas.map((tarea) =>\n//                        <Tarea\n//                            key={tarea.id}\n//                            id={tarea.id}\n//                            texto={tarea.texto}\n//                            completada={tarea.completada}\n//                            completarTarea={completarTarea}\n//                            eliminarTarea={eliminarTarea} />\n//                    )\n//                }\n//            </div>\n//        </>\n//    );\n//}\n//export default ListaDeTareas;","map":{"version":3,"names":["React","useState","TareaFormulario","Tarea","ListaDeTareas","Component","constructor","props","state","task","componentDidMount","fetch","then","res","json","result","setState","render","agregarTarea","map","tarea","id","description"],"sources":["C:/Alexis/Lista de tareas/Test/Test/ClientApp/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TareaFormulario from './TaskForm';\r\nimport Tarea from './Task';\r\nimport '../css/TaskList.css';\r\n\r\nclass ListaDeTareas extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            task: []\r\n        };\r\n    }\r\n    componentDidMount() {\r\n        fetch(\"api/Task/Index\").then(res => res.json()).then(result => {\r\n            this.setState({ task: result });\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <>\r\n                <TareaFormulario onSubmit={agregarTarea} />\r\n                <div className='tareas-lista-contenedor'>\r\n                    {\r\n                        task.map((tarea) =>\r\n                            <Tarea\r\n                                key={tarea.id}\r\n                                id={tarea.id}\r\n                                texto={tarea.description} />\r\n                        )\r\n                    }\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n//function ListaDeTareas() {\r\n\r\n//    const [tareas, setTareas] = useState([]);\r\n\r\n//    const agregarTarea = tarea => {\r\n//        if (tarea.texto.trim()) {\r\n//            tarea.texto = tarea.texto.trim();\r\n//            const tareasActualizadas = [tarea, ...tareas];\r\n//            setTareas(tareasActualizadas);\r\n//        }\r\n//    }\r\n\r\n//    const eliminarTarea = id => {\r\n//        const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\r\n//        setTareas(tareasActualizadas);\r\n//    }\r\n\r\n//    const completarTarea = id => {\r\n//        const tareasActualizadas = tareas.map(tarea => {\r\n//            if (tarea.id === id) {\r\n//                tarea.completada = !tarea.completada;\r\n//            }\r\n//            return tarea;\r\n//        });\r\n//        setTareas(tareasActualizadas);\r\n//    }\r\n\r\n//    return (\r\n//        <>\r\n//            <TareaFormulario onSubmit={agregarTarea} />\r\n//            <div className='tareas-lista-contenedor'>\r\n//                {\r\n//                    tareas.map((tarea) =>\r\n//                        <Tarea\r\n//                            key={tarea.id}\r\n//                            id={tarea.id}\r\n//                            texto={tarea.texto}\r\n//                            completada={tarea.completada}\r\n//                            completarTarea={completarTarea}\r\n//                            eliminarTarea={eliminarTarea} />\r\n//                    )\r\n//                }\r\n//            </div>\r\n//        </>\r\n//    );\r\n//}\r\n\r\n//export default ListaDeTareas;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAO,qBAAP;;;;AAEA,MAAMC,aAAN,SAA4BJ,KAAK,CAACK,SAAlC,CAA4C;EACxCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IAEA,KAAKC,KAAL,GAAa;MACTC,IAAI,EAAE;IADG,CAAb;EAGH;;EACDC,iBAAiB,GAAG;IAChBC,KAAK,CAAC,gBAAD,CAAL,CAAwBC,IAAxB,CAA6BC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAApC,EAAgDF,IAAhD,CAAqDG,MAAM,IAAI;MAC3D,KAAKC,QAAL,CAAc;QAAEP,IAAI,EAAEM;MAAR,CAAd;IACH,CAFD;EAGH;;EACDE,MAAM,GAAG;IACL,oBACI;MAAA,wBACI,QAAC,eAAD;QAAiB,QAAQ,EAAEC;MAA3B;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAK,SAAS,EAAC,yBAAf;QAAA,UAEQT,IAAI,CAACU,GAAL,CAAUC,KAAD,iBACL,QAAC,KAAD;UAEI,EAAE,EAAEA,KAAK,CAACC,EAFd;UAGI,KAAK,EAAED,KAAK,CAACE;QAHjB,GACSF,KAAK,CAACC,EADf;UAAA;UAAA;UAAA;QAAA,QADJ;MAFR;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA,gBADJ;EAeH;;AA7BuC,C,CAiC5C;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA"},"metadata":{},"sourceType":"module"}