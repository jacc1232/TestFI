{"ast":null,"code":"var _jsxFileName = \"C:\\\\Alexis\\\\Lista de tareas\\\\Test\\\\Test\\\\ClientApp\\\\src\\\\components\\\\TaskList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport TaskForm from './TaskForm';\nimport Task from './Task';\nimport '../css/TaskList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TaskList() {\n  _s();\n\n  const [tareas, setTareas] = useState([]);\n\n  const agregarTarea = tarea => {\n    if (tarea.texto.trim()) {\n      tarea.texto = tarea.texto.trim();\n      const tareasActualizadas = [tarea, ...tareas];\n      setTareas(tareasActualizadas);\n    }\n  };\n\n  const eliminarTarea = id => {\n    const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\n    setTareas(tareasActualizadas);\n  };\n\n  const completarTarea = id => {\n    const tareasActualizadas = tareas.map(tarea => {\n      if (tarea.id === id) {\n        tarea.completada = !tarea.completada;\n      }\n\n      return tarea;\n    });\n    setTareas(tareasActualizadas);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TareaFormulario, {\n      onSubmit: agregarTarea\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tareas-lista-contenedor\",\n      children: tareas.map(tarea => /*#__PURE__*/_jsxDEV(Tarea, {\n        id: tarea.id,\n        texto: tarea.texto,\n        completada: tarea.completada,\n        completarTarea: completarTarea,\n        eliminarTarea: eliminarTarea\n      }, tarea.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TaskList, \"qEPh+FJX576aOe1wcgToovFk070=\");\n\n_c = TaskList;\nexport default TaskList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","TaskForm","Task","TaskList","tareas","setTareas","agregarTarea","tarea","texto","trim","tareasActualizadas","eliminarTarea","id","filter","completarTarea","map","completada"],"sources":["C:/Alexis/Lista de tareas/Test/Test/ClientApp/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TaskForm from './TaskForm';\r\nimport Task from './Task';\r\nimport '../css/TaskList.css';\r\n\r\nfunction TaskList() {\r\n\r\n    const [tareas, setTareas] = useState([]);\r\n\r\n    const agregarTarea = tarea => {\r\n        if (tarea.texto.trim()) {\r\n            tarea.texto = tarea.texto.trim();\r\n            const tareasActualizadas = [tarea, ...tareas];\r\n            setTareas(tareasActualizadas);\r\n        }\r\n    }\r\n\r\n    const eliminarTarea = id => {\r\n        const tareasActualizadas = tareas.filter(tarea => tarea.id !== id);\r\n        setTareas(tareasActualizadas);\r\n    }\r\n\r\n    const completarTarea = id => {\r\n        const tareasActualizadas = tareas.map(tarea => {\r\n            if (tarea.id === id) {\r\n                tarea.completada = !tarea.completada;\r\n            }\r\n            return tarea;\r\n        });\r\n        setTareas(tareasActualizadas);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <TareaFormulario onSubmit={agregarTarea} />\r\n            <div className='tareas-lista-contenedor'>\r\n                {\r\n                    tareas.map((tarea) =>\r\n                        <Tarea\r\n                            key={tarea.id}\r\n                            id={tarea.id}\r\n                            texto={tarea.texto}\r\n                            completada={tarea.completada}\r\n                            completarTarea={completarTarea}\r\n                            eliminarTarea={eliminarTarea} />\r\n                    )\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TaskList;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,qBAAP;;;;AAEA,SAASC,QAAT,GAAoB;EAAA;;EAEhB,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;;EAEA,MAAMM,YAAY,GAAGC,KAAK,IAAI;IAC1B,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAZ,EAAJ,EAAwB;MACpBF,KAAK,CAACC,KAAN,GAAcD,KAAK,CAACC,KAAN,CAAYC,IAAZ,EAAd;MACA,MAAMC,kBAAkB,GAAG,CAACH,KAAD,EAAQ,GAAGH,MAAX,CAA3B;MACAC,SAAS,CAACK,kBAAD,CAAT;IACH;EACJ,CAND;;EAQA,MAAMC,aAAa,GAAGC,EAAE,IAAI;IACxB,MAAMF,kBAAkB,GAAGN,MAAM,CAACS,MAAP,CAAcN,KAAK,IAAIA,KAAK,CAACK,EAAN,KAAaA,EAApC,CAA3B;IACAP,SAAS,CAACK,kBAAD,CAAT;EACH,CAHD;;EAKA,MAAMI,cAAc,GAAGF,EAAE,IAAI;IACzB,MAAMF,kBAAkB,GAAGN,MAAM,CAACW,GAAP,CAAWR,KAAK,IAAI;MAC3C,IAAIA,KAAK,CAACK,EAAN,KAAaA,EAAjB,EAAqB;QACjBL,KAAK,CAACS,UAAN,GAAmB,CAACT,KAAK,CAACS,UAA1B;MACH;;MACD,OAAOT,KAAP;IACH,CAL0B,CAA3B;IAMAF,SAAS,CAACK,kBAAD,CAAT;EACH,CARD;;EAUA,oBACI;IAAA,wBACI,QAAC,eAAD;MAAiB,QAAQ,EAAEJ;IAA3B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAK,SAAS,EAAC,yBAAf;MAAA,UAEQF,MAAM,CAACW,GAAP,CAAYR,KAAD,iBACP,QAAC,KAAD;QAEI,EAAE,EAAEA,KAAK,CAACK,EAFd;QAGI,KAAK,EAAEL,KAAK,CAACC,KAHjB;QAII,UAAU,EAAED,KAAK,CAACS,UAJtB;QAKI,cAAc,EAAEF,cALpB;QAMI,aAAa,EAAEH;MANnB,GACSJ,KAAK,CAACK,EADf;QAAA;QAAA;QAAA;MAAA,QADJ;IAFR;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA,gBADJ;AAkBH;;GA7CQT,Q;;KAAAA,Q;AA+CT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}